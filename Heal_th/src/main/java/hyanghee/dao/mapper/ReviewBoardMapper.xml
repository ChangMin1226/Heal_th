<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Configuration DTD -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="hyanghee.dao.face.ReviewBoardDao">
<select id="selectCntAll" resultType="int" parameterType="BoardPaging">
		SELECT count(*) FROM reviewboard
	</select>
	
<!-- 	<select id="selectList" resultType="ReviewBoard" parameterType="BoardPaging"> -->
<!-- 		SELECT * FROM ( -->
<!-- 			SELECT rownum rnum, B.* FROM ( -->
<!-- 				SELECT -->
<!-- 					review_no, r_title, user_no, -->
<!-- 					r_hit, r_thumbs, r_inst_date -->
<!-- 					, score -->
<!-- 				FROM reviewboard -->
<!-- 				ORDER BY review_no DESC -->
<!-- 			) B -->
<!-- 		) ReviewBoard -->
<!-- 		WHERE rnum BETWEEN #{startNo } AND #{endNo } -->
<!-- 	</select> -->
	
	<select id="notice" resultType="Notice" parameterType="BoardPaging">
	<![CDATA[
		SELECT * FROM (
			SELECT * FROM notice ORDER BY notice_no DESC ) 
		WHERE ROWNUM <=3
		ORDER BY notice_no DESC
	]]>
	</select>
	
	<select id="updateHit" parameterType="ReviewBoard">
 		UPDATE reviewboard SET r_hit = r_hit + 1 
 		WHERE review_no = #{reviewNo}
 	</select>
	
	<select id="selectUserInfo" resultType="Users" parameterType="int">
		SELECT * FROM users
		WHERE user_no = #{userno }
	</select>
	
	<insert id="insertBoard" parameterType="ReviewBoard">
		
		<selectKey order="BEFORE" resultType="int" keyProperty="reviewNo">
			SELECT reviewboard_seq.nextval FROM dual
		</selectKey>
	
		INSERT INTO reviewboard ( 
			review_no, r_inst_date, r_title, gym_name, gym_introduce
			   , classification, price, address, lat, lng, score, review
			  ,r_hit, r_thumbs, user_no, category_no )
		
		VALUES ( #{reviewNo}, sysdate, #{rTitle}, #{gymName}, #{gymIntroduce}
				   , #{classification}, #{price}, #{address}, #{lat}, #{lng}, #{score}, #{review}
				   , 0, 0, #{userNo}, 4 )
	</insert>
	

	<select id="selectBoard" resultType="ReviewBoard" parameterType="ReviewBoard">
		SELECT
			review_no, r_inst_date, r_title, gym_name, gym_introduce
			   , classification, price, address, lat, lng, score, review
			   , r_hit
			   ,r_thumbs, user_no, category_no
		FROM reviewboard
		WHERE review_no = #{reviewNo}
	</select>
	
	<update id="updateBoard" parameterType="ReviewBoard">
		UPDATE reviewBoard
		SET r_title = #{rTitle}
			, gym_name = #{gymName}
			, gym_introduce = #{gymIntroduce}
			, classification = #{classification}
			, price = #{price}
			, address = #{address}
			, lat = #{lat}
			, lng = #{lng}
			, score = #{score}
			, review = #{review}
		WHERE review_no = #{reviewNo}
	</update>


	<delete id="delete" parameterType="ReviewBoard">
		DELETE reviewboard
		WHERE review_no = #{reviewNo}	
	</delete>
	
<!-- 	<select id="getList" resultType="ReviewBoard"> -->
<!-- 		SELECT review_no, r_title, user_no, score, -->
<!-- 				r_hit, r_thumbs, r_inst_date -->
<!-- 		FROM reviewboard -->
		
<!-- 		ORDER BY review_no DESC -->
<!-- 	</select> -->
	
<!-- 	<select id="getPage" resultType="ReviewBoard"> -->
<!--         SELECT * FROM reviewboard -->
<!--         WHERE review_no = #{reviewNo} -->
<!--     </select> -->
	
	<sql id="boardSearch">
        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            r_title like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'C'.toString()">
                            gym_introduce like '%'||#{keyword}||'%',
                            review like '%'||#{keyword}||'%'
                        </when>
                         <when test="type == 'TC'.toString()">
                         	r_title like '%'||#{keyword}||'%',
                            gym_introduce like '%'||#{keyword}||'%',
                            review like '%'||#{keyword}||'%'
                        </when>
                        
                    </choose>
                </trim>
            </foreach>
        </trim>
    
    </sql>
    
    <select id="getSearchPaging" resultType="ReviewBoard">
         
         SELECT review_no, r_title, user_no, score, review,
					r_hit, r_thumbs, r_inst_date  FROM( 
            select rownum rn, d.* from (
                 SELECT 
	                  review_no, r_title, user_no, score, review,
						r_hit, r_thumbs, r_inst_date 
                  
                 FROM reviewboard
                                 <if test="keyword != null">
                	WHERE r_title LIKE  '%${keyword}%'
                </if>
                 
                order by review_no desc
                ) d
            
        ) 
         WHERE rn between  ( #{curPage}-1) *10 and  #{curPage}*10
    </select>
    
	
	 <select id="getTotal" resultType="int">
    	SELECT count(*) FROM reviewboard
    	
    	<if test="keyword != null">
			WHERE review_no > 0 <include refid="boardSearch"></include>
        </if>
        
    </select>
	
	<select id="getPoint" resultType="int" parameterType="Users">
		SELECT point FROM users
		WHERE user_no = #{userNo }
	</select>
	
	
	<update id="updatePoint" parameterType="Users">
		UPDATE users SET point =
			point + 50
		WHERE user_no = #{userNo}
	</update>
	
</mapper>